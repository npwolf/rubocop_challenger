module RubocopChallenger
  class PullRequest
    def initialize(base, user_name, user_email, labels, dry_run)
      @pr_creater = Github::PrCreater.new(
        base: base,
        branch: "rubocop-challenge/#{timestamp}",
        user_name: user_name,
        user_email: user_email
      )
      @labels = labels
      @dry_run = dry_run
    end

    def commit!(description, &block)
      pr_creater.commit description, &block
    end

    def create_rubocop_challenge_pr!(rule, template)
      create_pull_request!(
        title: "#{rule.title}-#{timestamp}",
        body: Github::PrTemplate.new(rule, template).generate_pullrequest_markdown,
        labels: labels
      )
    end

    def create_regenerate_todo_pr!(before_version, after_version)
      create_pull_request!(
        title: "Re-generate .rubocop_todo.yml with RuboCop v#{after_version}",
        body: generate_pr_body(before_version, after_version),
        labels: labels
      )
    end

    private

    attr_reader :pr_creater, :labels, :dry_run

    # Create a PR with description of what modification were made.
    #
    # @param rule [Rubocop::Rule] The target rule
    def create_pull_request!(pr_creater_options)
      pr_creater.create_pr(pr_creater_options) unless dry_run
    end

    def generate_pr_body(before_version, after_version)
      <<~MARKDOWN
        Re-generated the .rubocop_todo.yml because it was generated by old version RuboCop.

        * Using RuboCop version: `#{before_version}` -> `#{after_version}`

        Auto generated by [rubocop_challenger](https://github.com/ryz310/rubocop_challenger)
      MARKDOWN
    end

    def timestamp
      @timestamp ||= Time.now.strftime('%Y%m%d%H%M%S')
    end
  end
end
